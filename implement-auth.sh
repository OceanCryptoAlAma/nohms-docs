#!/bin/bash

# üîê NOHMS.One - Implementaci√≥n de HTTP Basic Auth
# Este script configura autenticaci√≥n b√°sica para la documentaci√≥n

set -e

# Colores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m'

echo -e "${BLUE}üîê Implementando HTTP Basic Auth para NOHMS.One${NC}"
echo ""

# Paso 1: Verificar estructura del proyecto
echo -e "${YELLOW}üìÅ Verificando estructura del proyecto...${NC}"

if [ ! -f "docusaurus.config.ts" ] && [ ! -f "docusaurus.config.js" ]; then
    echo -e "${RED}‚ùå Este no parece ser un proyecto Docusaurus${NC}"
    exit 1
fi

if [ ! -d "src" ]; then
    mkdir -p src/pages
    echo -e "${GREEN}‚úÖ Creado directorio src/pages${NC}"
fi

# Paso 2: Crear middleware.js (ya creado con el comando anterior)
echo -e "${YELLOW}üîß Configurando middleware de autenticaci√≥n...${NC}"

if [ -f "middleware.js" ]; then
    echo -e "${GREEN}‚úÖ middleware.js configurado${NC}"
else
    echo -e "${RED}‚ùå middleware.js no encontrado - ejecuta el comando de creaci√≥n primero${NC}"
    exit 1
fi

# Paso 3: Crear p√°gina de informaci√≥n de auth (ya creada)
echo -e "${YELLOW}üìÑ Creando p√°gina de informaci√≥n...${NC}"

if [ -f "src/pages/auth-info.md" ]; then
    echo -e "${GREEN}‚úÖ P√°gina de informaci√≥n creada${NC}"
else
    echo -e "${RED}‚ùå P√°gina de informaci√≥n no encontrada${NC}"
    exit 1
fi

# Paso 4: Verificar Next.js
echo -e "${YELLOW}‚öôÔ∏è  Verificando dependencias...${NC}"

# Docusaurus usa Next.js internamente, verificamos si est√° disponible
if command -v npm &> /dev/null; then
    echo -e "${GREEN}‚úÖ npm disponible${NC}"
else
    echo -e "${RED}‚ùå npm no encontrado${NC}"
    exit 1
fi

# Paso 5: Crear archivo de configuraci√≥n para desarrollo local
echo -e "${YELLOW}üõ†Ô∏è  Configurando entorno de desarrollo...${NC}"

cat > .env.local << 'ENVEOF'
# Configuraci√≥n para desarrollo local con autenticaci√≥n
NODE_ENV=development
NEXT_AUTH_ENABLED=true
NOHMS_AUTH_USERNAME=nohms
NOHMS_AUTH_PASSWORD=movilidad2025
ENVEOF

echo -e "${GREEN}‚úÖ Archivo .env.local creado${NC}"

# Paso 6: Actualizar .gitignore si es necesario
if ! grep -q ".env.local" .gitignore 2>/dev/null; then
    echo ".env.local" >> .gitignore
    echo -e "${GREEN}‚úÖ .env.local agregado a .gitignore${NC}"
fi

# Paso 7: Instrucciones finales
echo ""
echo -e "${BLUE}üéâ ¬°Implementaci√≥n completada!${NC}"
echo ""
echo -e "${YELLOW}üìã CREDENCIALES DE ACCESO:${NC}"
echo -e "${GREEN}   Usuario: nohms${NC}"
echo -e "${GREEN}   Contrase√±a: movilidad2025${NC}"
echo ""
echo -e "${YELLOW}üöÄ PR√ìXIMOS PASOS:${NC}"
echo -e "${BLUE}1. Probar localmente:${NC}"
echo "   ./nohms-docs.sh dev"
echo ""
echo -e "${BLUE}2. Desplegar a producci√≥n:${NC}"
echo "   ./nohms-docs.sh deploy \"Agregada autenticaci√≥n HTTP Basic\""
echo ""
echo -e "${YELLOW}üîß CAMBIAR CREDENCIALES:${NC}"
echo -e "${BLUE}   Edita el archivo middleware.js l√≠neas 35-36${NC}"
echo ""
echo -e "${YELLOW}‚ö†Ô∏è  IMPORTANTE:${NC}"
echo -e "${RED}   Las credenciales est√°n en texto plano en middleware.js${NC}"
echo -e "${RED}   Considera usar variables de entorno para mayor seguridad${NC}"
echo ""
echo -e "${GREEN}‚úÖ La autenticaci√≥n funcionar√° en local y en Vercel${NC}"

